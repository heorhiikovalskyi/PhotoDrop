service: photodrop
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  profile: default
  region: eu-central-1

  environment:
    REGION: eu-central-1
    DB_CONNECTION: postgres://postgres:FEetvtSbxHABhu9@photodropdb.fly.dev:5432
    PORT: 8080
    SECRET_JWT_KEY: :tQGCWtN9dAa(WUN3tDcGz!!bp+:&y/DUMqZwt[cz@1itRGn{k5*q$zP,.n_5NFH82nj0:G$+NjbGn[}6[8t?f:acg3$Ff?3j.qw@C$,D]/M86kJyy/F%Gge=g6VGJm
    IMAGES_BUCKET: photodropimages
    EDITED_IMAGES_BUCKET: photodropeditedimages
    AWS_ACCESS_KEY_: AKIA5FCZ5KWZEMSQNWDK
    AWS_SECRET_KEY_: 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

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: arn:aws:s3:::photodropimages
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - lambda:InvokeFunction
          Resource: arn:aws:s3:::photodropeditedimages

custom:
  webpack:
    includeModules: false
    keepOutputDirectory: true

plugins:
  - serverless-webpack

package:
  individually: true

functions:
  afterImageUpload:
    handler: ./afterImageUpload.handler
    events:
      - s3:
          bucket: photodropimages
          event: s3:ObjectCreated:*
          existing: true
    layers:
      - arn:aws:lambda:eu-central-1:904279184818:layer:photodropLibs:8
